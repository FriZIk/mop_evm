ARM GAS  /tmp/cco40Wus.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB37:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
ARM GAS  /tmp/cco40Wus.s 			page 2


  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** /* USER CODE END PD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PM */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* USER CODE END PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  44:Src/main.c    **** UART_HandleTypeDef huart2;
  45:Src/main.c    **** 
  46:Src/main.c    **** /* USER CODE BEGIN PV */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE END PV */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  51:Src/main.c    **** void SystemClock_Config(void);
  52:Src/main.c    **** static void MX_GPIO_Init(void);
  53:Src/main.c    **** static void MX_USART2_UART_Init(void);
  54:Src/main.c    **** /* USER CODE BEGIN PFP */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE END PFP */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  59:Src/main.c    **** /* USER CODE BEGIN 0 */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE END 0 */
  62:Src/main.c    **** 
  63:Src/main.c    **** /**
  64:Src/main.c    ****   * @brief  The application entry point.
  65:Src/main.c    ****   * @retval int
  66:Src/main.c    ****   */
  67:Src/main.c    **** int main(void)
  68:Src/main.c    **** {
  69:Src/main.c    ****   /* USER CODE BEGIN 1 */
  70:Src/main.c    **** 
  71:Src/main.c    ****   /* USER CODE END 1 */
  72:Src/main.c    **** 
  73:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  74:Src/main.c    **** 
  75:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  76:Src/main.c    ****   HAL_Init();
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* USER CODE BEGIN Init */
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* USER CODE END Init */
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* Configure the system clock */
  83:Src/main.c    ****   SystemClock_Config();
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE END SysInit */
  88:Src/main.c    **** 
  89:Src/main.c    ****   /* Initialize all configured peripherals */
  90:Src/main.c    ****   MX_GPIO_Init();
ARM GAS  /tmp/cco40Wus.s 			page 3


  91:Src/main.c    ****   MX_USART2_UART_Init();
  92:Src/main.c    ****   /* USER CODE BEGIN 2 */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE END 2 */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* Infinite loop */
  97:Src/main.c    ****   /* USER CODE BEGIN WHILE */
  98:Src/main.c    ****   while (1)
  99:Src/main.c    ****   {
 100:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOA,GPIO_PIN_5);
 101:Src/main.c    ****     HAL_Delay(100);
 102:Src/main.c    ****   }
 103:Src/main.c    ****   /* USER CODE END 3 */
 104:Src/main.c    **** }
 105:Src/main.c    **** 
 106:Src/main.c    **** /**
 107:Src/main.c    ****   * @brief System Clock Configuration
 108:Src/main.c    ****   * @retval None
 109:Src/main.c    ****   */
 110:Src/main.c    **** void SystemClock_Config(void)
 111:Src/main.c    **** {
 112:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 113:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 114:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 115:Src/main.c    **** 
 116:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 117:Src/main.c    ****   */
 118:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 119:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 120:Src/main.c    ****   */
 121:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 122:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 123:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 124:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 125:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 126:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 127:Src/main.c    ****   {
 128:Src/main.c    ****     Error_Handler();
 129:Src/main.c    ****   }
 130:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 131:Src/main.c    ****   */
 132:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 133:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 134:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 135:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 136:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 137:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 138:Src/main.c    **** 
 139:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 140:Src/main.c    ****   {
 141:Src/main.c    ****     Error_Handler();
 142:Src/main.c    ****   }
 143:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 144:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 145:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 146:Src/main.c    ****   {
 147:Src/main.c    ****     Error_Handler();
ARM GAS  /tmp/cco40Wus.s 			page 4


 148:Src/main.c    ****   }
 149:Src/main.c    **** }
 150:Src/main.c    **** 
 151:Src/main.c    **** /**
 152:Src/main.c    ****   * @brief USART2 Initialization Function
 153:Src/main.c    ****   * @param None
 154:Src/main.c    ****   * @retval None
 155:Src/main.c    ****   */
 156:Src/main.c    **** static void MX_USART2_UART_Init(void)
 157:Src/main.c    **** {
 158:Src/main.c    **** 
 159:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 160:Src/main.c    **** 
 161:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 162:Src/main.c    **** 
 163:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 164:Src/main.c    **** 
 165:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 166:Src/main.c    ****   huart2.Instance = USART2;
 167:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 168:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 169:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 170:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 171:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 172:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 173:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 174:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 175:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 176:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 177:Src/main.c    ****   {
 178:Src/main.c    ****     Error_Handler();
 179:Src/main.c    ****   }
 180:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 181:Src/main.c    **** 
 182:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 183:Src/main.c    **** 
 184:Src/main.c    **** }
 185:Src/main.c    **** 
 186:Src/main.c    **** /**
 187:Src/main.c    ****   * @brief GPIO Initialization Function
 188:Src/main.c    ****   * @param None
 189:Src/main.c    ****   * @retval None
 190:Src/main.c    ****   */
 191:Src/main.c    **** static void MX_GPIO_Init(void)
 192:Src/main.c    **** {
  26              		.loc 1 192 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 70B5     		push	{r4, r5, r6, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 4, -16
  34              		.cfi_offset 5, -12
  35              		.cfi_offset 6, -8
  36              		.cfi_offset 14, -4
  37 0002 88B0     		sub	sp, sp, #32
ARM GAS  /tmp/cco40Wus.s 			page 5


  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
 193:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 193 3 view .LVU1
  41              		.loc 1 193 20 is_stmt 0 view .LVU2
  42 0004 1422     		movs	r2, #20
  43 0006 0021     		movs	r1, #0
  44 0008 03A8     		add	r0, sp, #12
  45 000a FFF7FEFF 		bl	memset
  46              	.LVL0:
 194:Src/main.c    **** 
 195:Src/main.c    ****   /* GPIO Ports Clock Enable */
 196:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  47              		.loc 1 196 3 is_stmt 1 view .LVU3
  48              	.LBB2:
  49              		.loc 1 196 3 view .LVU4
  50              		.loc 1 196 3 view .LVU5
  51 000e 1B4B     		ldr	r3, .L2
  52 0010 D96A     		ldr	r1, [r3, #44]
  53 0012 0422     		movs	r2, #4
  54 0014 1143     		orrs	r1, r2
  55 0016 D962     		str	r1, [r3, #44]
  56              		.loc 1 196 3 view .LVU6
  57 0018 D96A     		ldr	r1, [r3, #44]
  58 001a 0A40     		ands	r2, r1
  59 001c 0092     		str	r2, [sp]
  60              		.loc 1 196 3 view .LVU7
  61 001e 009A     		ldr	r2, [sp]
  62              	.LBE2:
  63              		.loc 1 196 3 view .LVU8
 197:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  64              		.loc 1 197 3 view .LVU9
  65              	.LBB3:
  66              		.loc 1 197 3 view .LVU10
  67              		.loc 1 197 3 view .LVU11
  68 0020 D96A     		ldr	r1, [r3, #44]
  69 0022 8022     		movs	r2, #128
  70 0024 1143     		orrs	r1, r2
  71 0026 D962     		str	r1, [r3, #44]
  72              		.loc 1 197 3 view .LVU12
  73 0028 D96A     		ldr	r1, [r3, #44]
  74 002a 0A40     		ands	r2, r1
  75 002c 0192     		str	r2, [sp, #4]
  76              		.loc 1 197 3 view .LVU13
  77 002e 019A     		ldr	r2, [sp, #4]
  78              	.LBE3:
  79              		.loc 1 197 3 view .LVU14
 198:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  80              		.loc 1 198 3 view .LVU15
  81              	.LBB4:
  82              		.loc 1 198 3 view .LVU16
  83              		.loc 1 198 3 view .LVU17
  84 0030 DA6A     		ldr	r2, [r3, #44]
  85 0032 0125     		movs	r5, #1
  86 0034 2A43     		orrs	r2, r5
  87 0036 DA62     		str	r2, [r3, #44]
  88              		.loc 1 198 3 view .LVU18
ARM GAS  /tmp/cco40Wus.s 			page 6


  89 0038 DB6A     		ldr	r3, [r3, #44]
  90 003a 2B40     		ands	r3, r5
  91 003c 0293     		str	r3, [sp, #8]
  92              		.loc 1 198 3 view .LVU19
  93 003e 029B     		ldr	r3, [sp, #8]
  94              	.LBE4:
  95              		.loc 1 198 3 view .LVU20
 199:Src/main.c    **** 
 200:Src/main.c    ****   /*Configure GPIO pin Output Level */
 201:Src/main.c    ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
  96              		.loc 1 201 3 view .LVU21
  97 0040 A026     		movs	r6, #160
  98 0042 F605     		lsls	r6, r6, #23
  99 0044 0022     		movs	r2, #0
 100 0046 2021     		movs	r1, #32
 101 0048 3000     		movs	r0, r6
 102 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 103              	.LVL1:
 202:Src/main.c    **** 
 203:Src/main.c    ****   /*Configure GPIO pin : B1_Pin */
 204:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin;
 104              		.loc 1 204 3 view .LVU22
 105              		.loc 1 204 23 is_stmt 0 view .LVU23
 106 004e 8023     		movs	r3, #128
 107 0050 9B01     		lsls	r3, r3, #6
 108 0052 0393     		str	r3, [sp, #12]
 205:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 109              		.loc 1 205 3 is_stmt 1 view .LVU24
 110              		.loc 1 205 24 is_stmt 0 view .LVU25
 111 0054 0A4B     		ldr	r3, .L2+4
 112 0056 0493     		str	r3, [sp, #16]
 206:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 113              		.loc 1 206 3 is_stmt 1 view .LVU26
 114              		.loc 1 206 24 is_stmt 0 view .LVU27
 115 0058 0024     		movs	r4, #0
 116 005a 0594     		str	r4, [sp, #20]
 207:Src/main.c    ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 117              		.loc 1 207 3 is_stmt 1 view .LVU28
 118 005c 03A9     		add	r1, sp, #12
 119 005e 0948     		ldr	r0, .L2+8
 120 0060 FFF7FEFF 		bl	HAL_GPIO_Init
 121              	.LVL2:
 208:Src/main.c    **** 
 209:Src/main.c    ****   /*Configure GPIO pin : LD2_Pin */
 210:Src/main.c    ****   GPIO_InitStruct.Pin = LD2_Pin;
 122              		.loc 1 210 3 view .LVU29
 123              		.loc 1 210 23 is_stmt 0 view .LVU30
 124 0064 2023     		movs	r3, #32
 125 0066 0393     		str	r3, [sp, #12]
 211:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 126              		.loc 1 211 3 is_stmt 1 view .LVU31
 127              		.loc 1 211 24 is_stmt 0 view .LVU32
 128 0068 0495     		str	r5, [sp, #16]
 212:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 129              		.loc 1 212 3 is_stmt 1 view .LVU33
 130              		.loc 1 212 24 is_stmt 0 view .LVU34
 131 006a 0594     		str	r4, [sp, #20]
ARM GAS  /tmp/cco40Wus.s 			page 7


 213:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 132              		.loc 1 213 3 is_stmt 1 view .LVU35
 133              		.loc 1 213 25 is_stmt 0 view .LVU36
 134 006c 0694     		str	r4, [sp, #24]
 214:Src/main.c    ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 135              		.loc 1 214 3 is_stmt 1 view .LVU37
 136 006e 03A9     		add	r1, sp, #12
 137 0070 3000     		movs	r0, r6
 138 0072 FFF7FEFF 		bl	HAL_GPIO_Init
 139              	.LVL3:
 215:Src/main.c    **** 
 216:Src/main.c    **** }
 140              		.loc 1 216 1 is_stmt 0 view .LVU38
 141 0076 08B0     		add	sp, sp, #32
 142              		@ sp needed
 143 0078 70BD     		pop	{r4, r5, r6, pc}
 144              	.L3:
 145 007a C046     		.align	2
 146              	.L2:
 147 007c 00100240 		.word	1073876992
 148 0080 00002110 		.word	270598144
 149 0084 00080050 		.word	1342179328
 150              		.cfi_endproc
 151              	.LFE37:
 153              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 154              		.align	1
 155              		.syntax unified
 156              		.code	16
 157              		.thumb_func
 158              		.fpu softvfp
 160              	MX_USART2_UART_Init:
 161              	.LFB36:
 157:Src/main.c    **** 
 162              		.loc 1 157 1 is_stmt 1 view -0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166 0000 10B5     		push	{r4, lr}
 167              	.LCFI2:
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 4, -8
 170              		.cfi_offset 14, -4
 166:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 171              		.loc 1 166 3 view .LVU40
 166:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 172              		.loc 1 166 19 is_stmt 0 view .LVU41
 173 0002 0948     		ldr	r0, .L5
 174 0004 094B     		ldr	r3, .L5+4
 175 0006 0360     		str	r3, [r0]
 167:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 176              		.loc 1 167 3 is_stmt 1 view .LVU42
 167:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 177              		.loc 1 167 24 is_stmt 0 view .LVU43
 178 0008 E123     		movs	r3, #225
 179 000a 5B02     		lsls	r3, r3, #9
 180 000c 4360     		str	r3, [r0, #4]
 168:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
ARM GAS  /tmp/cco40Wus.s 			page 8


 181              		.loc 1 168 3 is_stmt 1 view .LVU44
 168:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 182              		.loc 1 168 26 is_stmt 0 view .LVU45
 183 000e 0023     		movs	r3, #0
 184 0010 8360     		str	r3, [r0, #8]
 169:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 185              		.loc 1 169 3 is_stmt 1 view .LVU46
 169:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 186              		.loc 1 169 24 is_stmt 0 view .LVU47
 187 0012 C360     		str	r3, [r0, #12]
 170:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 188              		.loc 1 170 3 is_stmt 1 view .LVU48
 170:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 189              		.loc 1 170 22 is_stmt 0 view .LVU49
 190 0014 0361     		str	r3, [r0, #16]
 171:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 191              		.loc 1 171 3 is_stmt 1 view .LVU50
 171:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 192              		.loc 1 171 20 is_stmt 0 view .LVU51
 193 0016 0C22     		movs	r2, #12
 194 0018 4261     		str	r2, [r0, #20]
 172:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 195              		.loc 1 172 3 is_stmt 1 view .LVU52
 172:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 196              		.loc 1 172 25 is_stmt 0 view .LVU53
 197 001a 8361     		str	r3, [r0, #24]
 173:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 198              		.loc 1 173 3 is_stmt 1 view .LVU54
 173:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 199              		.loc 1 173 28 is_stmt 0 view .LVU55
 200 001c C361     		str	r3, [r0, #28]
 174:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 201              		.loc 1 174 3 is_stmt 1 view .LVU56
 174:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 202              		.loc 1 174 30 is_stmt 0 view .LVU57
 203 001e 0362     		str	r3, [r0, #32]
 175:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 204              		.loc 1 175 3 is_stmt 1 view .LVU58
 175:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 205              		.loc 1 175 38 is_stmt 0 view .LVU59
 206 0020 4362     		str	r3, [r0, #36]
 176:Src/main.c    ****   {
 207              		.loc 1 176 3 is_stmt 1 view .LVU60
 176:Src/main.c    ****   {
 208              		.loc 1 176 7 is_stmt 0 view .LVU61
 209 0022 FFF7FEFF 		bl	HAL_UART_Init
 210              	.LVL4:
 184:Src/main.c    **** 
 211              		.loc 1 184 1 view .LVU62
 212              		@ sp needed
 213 0026 10BD     		pop	{r4, pc}
 214              	.L6:
 215              		.align	2
 216              	.L5:
 217 0028 00000000 		.word	huart2
 218 002c 00440040 		.word	1073759232
 219              		.cfi_endproc
ARM GAS  /tmp/cco40Wus.s 			page 9


 220              	.LFE36:
 222              		.section	.text.SystemClock_Config,"ax",%progbits
 223              		.align	1
 224              		.global	SystemClock_Config
 225              		.syntax unified
 226              		.code	16
 227              		.thumb_func
 228              		.fpu softvfp
 230              	SystemClock_Config:
 231              	.LFB35:
 111:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 232              		.loc 1 111 1 is_stmt 1 view -0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 120
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236 0000 10B5     		push	{r4, lr}
 237              	.LCFI3:
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 4, -8
 240              		.cfi_offset 14, -4
 241 0002 9EB0     		sub	sp, sp, #120
 242              	.LCFI4:
 243              		.cfi_def_cfa_offset 128
 112:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 244              		.loc 1 112 3 view .LVU64
 112:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 245              		.loc 1 112 22 is_stmt 0 view .LVU65
 246 0004 3822     		movs	r2, #56
 247 0006 0021     		movs	r1, #0
 248 0008 10A8     		add	r0, sp, #64
 249 000a FFF7FEFF 		bl	memset
 250              	.LVL5:
 113:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 251              		.loc 1 113 3 is_stmt 1 view .LVU66
 113:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 252              		.loc 1 113 22 is_stmt 0 view .LVU67
 253 000e 1422     		movs	r2, #20
 254 0010 0021     		movs	r1, #0
 255 0012 0BA8     		add	r0, sp, #44
 256 0014 FFF7FEFF 		bl	memset
 257              	.LVL6:
 114:Src/main.c    **** 
 258              		.loc 1 114 3 is_stmt 1 view .LVU68
 114:Src/main.c    **** 
 259              		.loc 1 114 28 is_stmt 0 view .LVU69
 260 0018 2822     		movs	r2, #40
 261 001a 0021     		movs	r1, #0
 262 001c 01A8     		add	r0, sp, #4
 263 001e FFF7FEFF 		bl	memset
 264              	.LVL7:
 118:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 265              		.loc 1 118 3 is_stmt 1 view .LVU70
 266 0022 1349     		ldr	r1, .L8
 267 0024 0B68     		ldr	r3, [r1]
 268 0026 134A     		ldr	r2, .L8+4
 269 0028 1A40     		ands	r2, r3
 270 002a 8023     		movs	r3, #128
ARM GAS  /tmp/cco40Wus.s 			page 10


 271 002c 1B01     		lsls	r3, r3, #4
 272 002e 1343     		orrs	r3, r2
 273 0030 0B60     		str	r3, [r1]
 121:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 274              		.loc 1 121 3 view .LVU71
 121:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 275              		.loc 1 121 36 is_stmt 0 view .LVU72
 276 0032 1023     		movs	r3, #16
 277 0034 1093     		str	r3, [sp, #64]
 122:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 278              		.loc 1 122 3 is_stmt 1 view .LVU73
 122:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 279              		.loc 1 122 30 is_stmt 0 view .LVU74
 280 0036 0F3B     		subs	r3, r3, #15
 281 0038 1793     		str	r3, [sp, #92]
 123:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 282              		.loc 1 123 3 is_stmt 1 view .LVU75
 123:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 283              		.loc 1 123 41 is_stmt 0 view .LVU76
 284 003a 0024     		movs	r4, #0
 285 003c 1894     		str	r4, [sp, #96]
 124:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 286              		.loc 1 124 3 is_stmt 1 view .LVU77
 124:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 287              		.loc 1 124 35 is_stmt 0 view .LVU78
 288 003e A023     		movs	r3, #160
 289 0040 1B02     		lsls	r3, r3, #8
 290 0042 1993     		str	r3, [sp, #100]
 125:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 291              		.loc 1 125 3 is_stmt 1 view .LVU79
 125:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 292              		.loc 1 125 34 is_stmt 0 view .LVU80
 293 0044 1A94     		str	r4, [sp, #104]
 126:Src/main.c    ****   {
 294              		.loc 1 126 3 is_stmt 1 view .LVU81
 126:Src/main.c    ****   {
 295              		.loc 1 126 7 is_stmt 0 view .LVU82
 296 0046 10A8     		add	r0, sp, #64
 297 0048 FFF7FEFF 		bl	HAL_RCC_OscConfig
 298              	.LVL8:
 132:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 299              		.loc 1 132 3 is_stmt 1 view .LVU83
 132:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 300              		.loc 1 132 31 is_stmt 0 view .LVU84
 301 004c 0F23     		movs	r3, #15
 302 004e 0B93     		str	r3, [sp, #44]
 134:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 303              		.loc 1 134 3 is_stmt 1 view .LVU85
 134:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 304              		.loc 1 134 34 is_stmt 0 view .LVU86
 305 0050 0C94     		str	r4, [sp, #48]
 135:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 306              		.loc 1 135 3 is_stmt 1 view .LVU87
 135:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 307              		.loc 1 135 35 is_stmt 0 view .LVU88
 308 0052 0D94     		str	r4, [sp, #52]
 136:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /tmp/cco40Wus.s 			page 11


 309              		.loc 1 136 3 is_stmt 1 view .LVU89
 136:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 310              		.loc 1 136 36 is_stmt 0 view .LVU90
 311 0054 0E94     		str	r4, [sp, #56]
 137:Src/main.c    **** 
 312              		.loc 1 137 3 is_stmt 1 view .LVU91
 137:Src/main.c    **** 
 313              		.loc 1 137 36 is_stmt 0 view .LVU92
 314 0056 0F94     		str	r4, [sp, #60]
 139:Src/main.c    ****   {
 315              		.loc 1 139 3 is_stmt 1 view .LVU93
 139:Src/main.c    ****   {
 316              		.loc 1 139 7 is_stmt 0 view .LVU94
 317 0058 0021     		movs	r1, #0
 318 005a 0BA8     		add	r0, sp, #44
 319 005c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 320              	.LVL9:
 143:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 321              		.loc 1 143 3 is_stmt 1 view .LVU95
 143:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 322              		.loc 1 143 38 is_stmt 0 view .LVU96
 323 0060 0223     		movs	r3, #2
 324 0062 0193     		str	r3, [sp, #4]
 144:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 325              		.loc 1 144 3 is_stmt 1 view .LVU97
 144:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 326              		.loc 1 144 38 is_stmt 0 view .LVU98
 327 0064 0594     		str	r4, [sp, #20]
 145:Src/main.c    ****   {
 328              		.loc 1 145 3 is_stmt 1 view .LVU99
 145:Src/main.c    ****   {
 329              		.loc 1 145 7 is_stmt 0 view .LVU100
 330 0066 01A8     		add	r0, sp, #4
 331 0068 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 332              	.LVL10:
 149:Src/main.c    **** 
 333              		.loc 1 149 1 view .LVU101
 334 006c 1EB0     		add	sp, sp, #120
 335              		@ sp needed
 336 006e 10BD     		pop	{r4, pc}
 337              	.L9:
 338              		.align	2
 339              	.L8:
 340 0070 00700040 		.word	1073770496
 341 0074 FFE7FFFF 		.word	-6145
 342              		.cfi_endproc
 343              	.LFE35:
 345              		.section	.text.main,"ax",%progbits
 346              		.align	1
 347              		.global	main
 348              		.syntax unified
 349              		.code	16
 350              		.thumb_func
 351              		.fpu softvfp
 353              	main:
 354              	.LFB34:
  68:Src/main.c    ****   /* USER CODE BEGIN 1 */
ARM GAS  /tmp/cco40Wus.s 			page 12


 355              		.loc 1 68 1 is_stmt 1 view -0
 356              		.cfi_startproc
 357              		@ Volatile: function does not return.
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360 0000 10B5     		push	{r4, lr}
 361              	.LCFI5:
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 4, -8
 364              		.cfi_offset 14, -4
  76:Src/main.c    **** 
 365              		.loc 1 76 3 view .LVU103
 366 0002 FFF7FEFF 		bl	HAL_Init
 367              	.LVL11:
  83:Src/main.c    **** 
 368              		.loc 1 83 3 view .LVU104
 369 0006 FFF7FEFF 		bl	SystemClock_Config
 370              	.LVL12:
  90:Src/main.c    ****   MX_USART2_UART_Init();
 371              		.loc 1 90 3 view .LVU105
 372 000a FFF7FEFF 		bl	MX_GPIO_Init
 373              	.LVL13:
  91:Src/main.c    ****   /* USER CODE BEGIN 2 */
 374              		.loc 1 91 3 view .LVU106
 375 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 376              	.LVL14:
 377              	.L11:
  98:Src/main.c    ****   {
 378              		.loc 1 98 3 discriminator 1 view .LVU107
 100:Src/main.c    ****     HAL_Delay(100);
 379              		.loc 1 100 5 discriminator 1 view .LVU108
 380 0012 A020     		movs	r0, #160
 381 0014 2021     		movs	r1, #32
 382 0016 C005     		lsls	r0, r0, #23
 383 0018 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 384              	.LVL15:
 101:Src/main.c    ****   }
 385              		.loc 1 101 5 discriminator 1 view .LVU109
 386 001c 6420     		movs	r0, #100
 387 001e FFF7FEFF 		bl	HAL_Delay
 388              	.LVL16:
  98:Src/main.c    ****   {
 389              		.loc 1 98 9 discriminator 1 view .LVU110
 390 0022 F6E7     		b	.L11
 391              		.cfi_endproc
 392              	.LFE34:
 394              		.section	.text.Error_Handler,"ax",%progbits
 395              		.align	1
 396              		.global	Error_Handler
 397              		.syntax unified
 398              		.code	16
 399              		.thumb_func
 400              		.fpu softvfp
 402              	Error_Handler:
 403              	.LFB38:
 217:Src/main.c    **** 
 218:Src/main.c    **** /* USER CODE BEGIN 4 */
ARM GAS  /tmp/cco40Wus.s 			page 13


 219:Src/main.c    **** 
 220:Src/main.c    **** /* USER CODE END 4 */
 221:Src/main.c    **** 
 222:Src/main.c    **** /**
 223:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 224:Src/main.c    ****   * @retval None
 225:Src/main.c    ****   */
 226:Src/main.c    **** void Error_Handler(void)
 227:Src/main.c    **** {
 404              		.loc 1 227 1 view -0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 408              		@ link register save eliminated.
 228:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 229:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 230:Src/main.c    **** 
 231:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 232:Src/main.c    **** }
 409              		.loc 1 232 1 view .LVU112
 410              		@ sp needed
 411 0000 7047     		bx	lr
 412              		.cfi_endproc
 413              	.LFE38:
 415              		.comm	huart2,128,4
 416              		.text
 417              	.Letext0:
 418              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 419              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 420              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 421              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l073xx.h"
 422              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 423              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc.h"
 424              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc_ex.h"
 425              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 426              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 427              		.file 11 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_uart.h"
 428              		.file 12 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 429              		.file 13 "<built-in>"
ARM GAS  /tmp/cco40Wus.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cco40Wus.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cco40Wus.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cco40Wus.s:147    .text.MX_GPIO_Init:000000000000007c $d
     /tmp/cco40Wus.s:154    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/cco40Wus.s:160    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/cco40Wus.s:217    .text.MX_USART2_UART_Init:0000000000000028 $d
                            *COM*:0000000000000080 huart2
     /tmp/cco40Wus.s:223    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cco40Wus.s:230    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cco40Wus.s:340    .text.SystemClock_Config:0000000000000070 $d
     /tmp/cco40Wus.s:346    .text.main:0000000000000000 $t
     /tmp/cco40Wus.s:353    .text.main:0000000000000000 main
     /tmp/cco40Wus.s:395    .text.Error_Handler:0000000000000000 $t
     /tmp/cco40Wus.s:402    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_GPIO_TogglePin
HAL_Delay
